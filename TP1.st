Object subclass: #AlgoFix	instanceVariableNames: 'pintores tecnicaPincel tecnicaRodillo'	classVariableNames: ''	package: 'TP1'!!AlgoFix commentStamp: 'Julian 5/28/2020 12:10' prior: 0!Represento a AlgoFix, una aplicacion que te ayudara a encontrar el mejor servicio.Podemos registrar pintores, ya sea de pincel o de rodillo, y crear pinturas. AlgoFix te brindael mejor presupuesto para tus requerimientos.Para poder usarme solo tienes que usar la siguiente linea de codigo:			algofix = AlgoFix new.     //crea a algofix para su uso- registrarPintorDePincel        registra un pintor de pincel en nuestra aplicacion  - registrarPintorDeRodillo       registra un pintor de rodillo en nuestra aplicacion- crearPintura                   crea pinturas - presupuestoMasBarato           te brindamos el mejor presupuesto para tus requerimientos   Veamos un ejemplo de su uso:		algofix := AlgoFix new.		algofix registrarPintorDePincel: 'Diego' conValorHora: 218.		alba := algofix crearPintura: 'Alba' conPrecioPorLitro: 213 manosPincel: 1 manosRodillo: 2.				presupuesto := algofix presupuestoMasBaratoParaPintarMetrosCuadrados: 60 conPintura: alba. !!AlgoFix methodsFor: 'initialization' stamp: 'Julian 5/22/2020 18:42'!initialize 	pintores := OrderedCollection new.	tecnicaPincel := Pincel new.	tecnicaRodillo := Rodillo new.! !!AlgoFix methodsFor: 'public' stamp: 'Julian 5/23/2020 22:44'!registrarPintorDePincel: unNombre conValorHora: unPrecio 	self registrarPintor: unNombre conValorHora: unPrecio  conTecnica: tecnicaPincel.! !!AlgoFix methodsFor: 'public' stamp: 'Julian 5/27/2020 10:49'!presupuestoMasBaratoParaPintarMetrosCuadrados: metros conPintura: pintura 	| presupuestos |	(pintores isEmptyOrNil)ifTrue:[NoHayPintoresRegistrados signal].		presupuestos := pintores collect: [ :pintor | pintor calcularPresupuestoConMetros: metros conPintura: pintura ].		^(self obtenerMenorPresupuesto: presupuestos).	! !!AlgoFix methodsFor: 'public' stamp: 'Julian 5/22/2020 19:36'!manoDeObra: unValor masMateriales: otroValor	^(unValor + otroValor).! !!AlgoFix methodsFor: 'public' stamp: 'Julian 5/23/2020 22:44'!registrarPintorDeRodillo: unNombre conValorHora: unPrecio 	self registrarPintor: unNombre conValorHora: unPrecio  conTecnica: tecnicaRodillo.! !!AlgoFix methodsFor: 'public' stamp: 'Julian 5/25/2020 12:18'!crearPintura: unNombre conPrecioPorLitro: unPrecio manosPincel: unaMano manosRodillo: otraMano 	^(Pintura conNombre: unNombre conPrecio: unPrecio manosPincel: unaMano manosRodillo: otraMano).! !!AlgoFix methodsFor: 'private' stamp: 'Julian 5/23/2020 22:42'!registrarPintor: unNombre conValorHora: unPrecio conTecnica: unaTecnica	pintores add: (Pintor conNombre: unNombre conPrecio: unPrecio conTecnica: unaTecnica).! !!AlgoFix methodsFor: 'private' stamp: 'Julian 5/24/2020 12:01'!obtenerMenorPresupuesto: presupuestos	^(presupuestos detectMin: [:presupuesto | presupuesto]).! !Error subclass: #InformacionInvalida	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Error subclass: #NoHayPintoresRegistrados	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Pintor	instanceVariableNames: 'nombre precio tecnica'	classVariableNames: ''	package: 'TP1'!!Pintor commentStamp: 'Julian 5/28/2020 12:11' prior: 0!Represento a un pintor.Uso la tecnica que me asignes para pintar (Pincel o Rodillo).Puedo calcular mi presupuesto para ciertos metros y cierta pintura.!!Pintor methodsFor: 'initialization - private' stamp: 'Julian 5/22/2020 15:28'!nombre: unNombre precio: unPrecio tecnica: unaTecnica	nombre := unNombre.	precio := unPrecio.	tecnica := unaTecnica.! !!Pintor methodsFor: 'public' stamp: 'Julian 5/26/2020 12:42'!calcularPresupuestoConMetros: metros conPintura: pintura 	| manoObra materiales  |	(metros <= 0)ifTrue:[InformacionInvalida signal].	pintura ifNil: [PinturaNoReconocida signal].		manoObra := (tecnica calcularManoObra: metros conPintura: pintura) * precio.	materiales := pintura calcularMateriales: metros conTecnica: tecnica.			^(Presupuesto conNombre: nombre conValor: (manoObra + materiales)).! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pintor class	instanceVariableNames: ''!!Pintor class methodsFor: 'as yet unclassified' stamp: 'Julian 5/23/2020 11:33'!conNombre: unNombre conPrecio: unPrecio conTecnica: unaTecnica	| pintor |	((unNombre match: '') | (unPrecio <= 0))ifTrue:[InformacionInvalida signal].		pintor := self new.		pintor nombre: unNombre precio: unPrecio tecnica: unaTecnica.		^pintor.! !Object subclass: #Pintura	instanceVariableNames: 'nombre precio manoPincel manoRodillo'	classVariableNames: ''	package: 'TP1'!!Pintura methodsFor: 'initialization - private' stamp: 'Julian 5/25/2020 12:06'!nombre: unNombre precio: unPrecio manosPincel: unaMano manosRodillo: otraMano	nombre := unNombre.	precio := unPrecio.	manoPincel := unaMano.	manoRodillo := otraMano.! !!Pintura methodsFor: 'public' stamp: 'Julian 5/25/2020 12:04'!manosPincel	^manoPincel.! !!Pintura methodsFor: 'public' stamp: 'Julian 5/25/2020 12:02'!calcularMateriales: metros conTecnica: tecnica.	^((tecnica obtenerLitros: metros) * precio * (tecnica obtenerManos: self)).! !!Pintura methodsFor: 'public' stamp: 'Julian 5/25/2020 12:04'!manosRodillo	^manoRodillo.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Pintura class	instanceVariableNames: ''!!Pintura class methodsFor: 'as yet unclassified' stamp: 'Julian 5/25/2020 13:21'!conNombre: unNombre conPrecio: unPrecio manosPincel: unaMano manosRodillo: otraMano	| pintura |	((unNombre = '') | (unPrecio <= 0) | (unaMano <= 0) | (otraMano <= 0))ifTrue: [InformacionInvalida signal].		pintura := self new.	pintura nombre: unNombre precio: unPrecio manosPincel: unaMano manosRodillo: otraMano.		^pintura.! !Error subclass: #PinturaNoReconocida	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!Object subclass: #Presupuesto	instanceVariableNames: 'responsable valor'	classVariableNames: ''	package: 'TP1'!!Presupuesto methodsFor: 'initialization - private' stamp: 'Julian 5/22/2020 11:39'!responsable: unNombre valor: unValor	responsable := unNombre.	valor := unValor.! !!Presupuesto methodsFor: 'comparing' stamp: 'Julian 5/22/2020 11:54'!< otroPresupuesto 	^(valor < otroPresupuesto valor).! !!Presupuesto methodsFor: 'public' stamp: 'Julian 5/22/2020 11:42'!valor	^ valor! !!Presupuesto methodsFor: 'public' stamp: 'Julian 5/22/2020 11:50'!responsable	^ responsable! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Presupuesto class	instanceVariableNames: ''!!Presupuesto class methodsFor: 'as yet unclassified' stamp: 'Julian 5/22/2020 11:39'!conNombre: unNombre conValor: unValor	| presupuesto |		presupuesto := self new.		presupuesto responsable: unNombre valor: unValor.		^presupuesto.! !Object subclass: #Tecnica	instanceVariableNames: 'tiempoPorM2 litrosPorM2'	classVariableNames: ''	package: 'TP1'!!Tecnica methodsFor: 'public' stamp: 'Julian 5/25/2020 12:01'!calcularManoObra: metros conPintura: pintura	| manoObra |	manoObra := ((self obtenerHoras: metros) * (self obtenerManos: pintura)).	^(self aplicarDescuento: manoObra conMetros: metros).	! !!Tecnica methodsFor: 'private' stamp: 'Julian 5/24/2020 11:52'!obtenerHoras: metros	^(metros * tiempoPorM2).! !!Tecnica methodsFor: 'private' stamp: 'Julian 5/25/2020 11:44'!obtenerManos: pintura	^self subclassResponsibility.! !!Tecnica methodsFor: 'private' stamp: 'Julian 5/24/2020 11:52'!obtenerLitros: metros	^(metros * litrosPorM2).! !!Tecnica methodsFor: 'private' stamp: 'Julian 5/23/2020 12:04'!aplicarDescuento: unValor conMetros: metros.	self subclassResponsibility.! !Tecnica subclass: #Pincel	instanceVariableNames: 'metrosNecesarios'	classVariableNames: ''	package: 'TP1'!!Pincel methodsFor: 'initialization' stamp: 'Julian 5/24/2020 15:14'!initialize 	tiempoPorM2 := 2.	litrosPorM2 := 4.	metrosNecesarios := 40.! !!Pincel methodsFor: 'private' stamp: 'Julian 5/24/2020 15:14'!aplicarDescuento: unValor conMetros: metros.	(metros > metrosNecesarios)ifTrue: [ ^(unValor * 0.5) ].	^unValor.! !!Pincel methodsFor: 'private' stamp: 'Julian 5/25/2020 12:15'!obtenerManos: pintura	^pintura manosPincel.! !Tecnica subclass: #Rodillo	instanceVariableNames: ''	classVariableNames: ''	package: 'TP1'!!Rodillo methodsFor: 'private' stamp: 'Julian 5/23/2020 11:52'!aplicarDescuento: unValor conMetros: metros.	^unValor.! !!Rodillo methodsFor: 'private' stamp: 'Julian 5/25/2020 12:15'!obtenerManos: pintura	^pintura manosRodillo.! !!Rodillo methodsFor: 'initialization' stamp: 'Julian 5/24/2020 11:53'!initialize 	tiempoPorM2 := 1.	litrosPorM2 := 5.! !